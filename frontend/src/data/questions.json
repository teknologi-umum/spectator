{
  "questions": [
    {
      "id": 1,
      "title": "Twinkle Twinkle Little Star",
      "question": "You've been given a task to prevent a star from falling down to earth. Wait, how would you do that? Simply create a function that will print the lyrics of a song called twinkle twinkle little star but by only using 2 variables. If you do more than that or less than that, the star will fall, the world will end, and everybody will blame you.\n\nExpected output: ``` Twinkle twinkle little star How I wonder what you are Up above the world so high Like a diamond in the sky Twinkle twinkle little star How I wonder what you are ```\n\nPseudocode example: ``` defn printLyrics()\n  lyric1 = some lyrics goes here\n  lyric2 = the rest of the lyrics goes here\n  print(lyric1)\n  print(lyric2)\nend ```\n\nVery easy, right? You should be able to do it less than 5 minutes.",
      "languages": [
        {
          "name": "python",
          "code": "def printLyrics() -> None:\n  |\n"
        },
        {
          "name": "java",
          "code": "class Lyrics {\n  public void printLyrics() {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function printLyrics() {\n    |\n}\n"
        },
        {
          "name": "php",
          "code": "function printLyrics() {\n    |\n}\n"
        },
        {
          "name": "c++",
          "code": "void printLyrics() {\n    |\n}\n"
        },
        {
          "name": "c",
          "code": "void printLyrics() {\n    |\n}\n"
        }
      ]
    },
    {
      "id": 2,
      "title": "Temperature Converter",
      "question": "Great! If you've arrived here. That means you've successfully prevented the star from falling down to earth. Wait a minute, the atmosphere suddenly feels cold. Oh shoot, apparently the shooting star broke the earth's atmosphere and the temperature dropped quickly.\n\nSince you're a curious person, you decided to find how much the temperature has dropped in Celcius, Fahrenheit, and Kelvin. Of course, since you're a smart person you don't want to calculate it manually. You decided to make a program to calculate them for you.\n\nYour current task is figure out how to convert a given temperature, which is in Celcius, and find its equivalent in Fahrenheit or Kelvin. Should be easy enough, right?\n\nInput: ``` calculateTemperature(100, \"Celcius\", \"Fahrenheit\") calculateTemperature(212, \"Fahrenheit\", \"Kelvin\") ```\n\nExpected output: ``` 212 373 ```\n\nPseudocode example: ``` defn calculateTemperature(temperature, from, to)\n  if (from == \"celcius\") and (to == \"fahrenheit\") then\n    return celcius -> fahrenheit\n  else if (from == \"fahrenheit\") and (to == \"celcius\") then\n    return fahrenheit -> celcius\n  ...\nend ```\n\nConstraints:\n  - The input is always an integer\n  - The input will never exceeds 1000\n  - The input will never be negative\n\n\nGood luck!",
      "languages": [
        {
          "name": "python",
          "code": "def calculateTemperature(temp: int, from: str, to: str) -> int:\n  |\n"
        },
        {
          "name": "java",
          "code": "class Temperature {\n  public void calculateTemperature(int temp, String from, String to) {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function calculateTemperature(temp, from, to) {\n    |\n}\n"
        },
        {
          "name": "php",
          "code": "function calculateTemperature(int temp, string from, string to): int {\n    |\n}\n"
        },
        {
          "name": "c++",
          "code": "#include <stdio.h>\n\nint calculateTemperature(int temp, std::string from, std::string to) {\n    |\n}\n"
        },
        {
          "name": "c",
          "code": "int calculateTemperature(int temp, char[] from, char[] to) {\n    |\n}\n"
        }
      ]
    },
    {
      "id": 3,
      "title": "Check similar number",
      "question": "Great! You've calculated the temperatures. Since you're a curious person, you think to yourself, why are there different units for temperature. Obviously their value won't be the same because they're in different unit, but just to make sure, you decided to make a program which compares if 2 temperatures are the same or not.\nYour task now is to create a function to make sure that 2 temperatures are indeed different, but don't print the result, simple return it. It will be either `true` or `false`. Here's an example:\n\nInput: ``` isSameNumber(100, 212) isSameNumber(212, 373) isSameNumber(373, 100) ```\n\nExpected output: ``` false false false ```\n\nPseudocode example: ``` defn isSameNumber(a, b)\n  if a is equal to b then\n    return true\n  otherwise\n    return false\nend ```\n\nConstraints:\n  - The input is always an integer\n\n\nGood luck!",
      "languages": [
        {
          "name": "python",
          "code": "def isSameNumber(a: int, b: int) -> bool:\n  |\n"
        },
        {
          "name": "java",
          "code": "class SimilarNumber {\n  public boolean isSameNumber(int a, int b) {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function isSameNumber(a, b) {\n    return |\n}\n"
        },
        {
          "name": "php",
          "code": "function isSameNumber(int a, int b) {\n    return |\n}\n"
        },
        {
          "name": "c++",
          "code": "int isSameNumber(int a, int b) {\n    return |\n}\n"
        },
        {
          "name": "c",
          "code": "int isSameNumber(int a, int b) {\n    return |\n}\n"
        }
      ]
    },
    {
      "id": 4,
      "title": "Sum all digits of integers",
      "question": "Nice, you've calculated the temperature and made sure they're different from one another. You should have 3 numbers with you (Celcius, Fahrenheit, Kelvin). Since the temperature is freezing, you decided to turn on the room heater. One issue though, you don't know how much power needed to turn on the heater.\n\nYour task is now to find the power needed to turn on the room heater. You can find it by simply calculating the sum of the digits of the previous temperatures combined.\n\nSuppose we have these numbers:\nCelcius = 100\nFahrenheit = 212\nKelvin = 373\n\nThen the input will be 100212373. The sum of the input is as simple as adding them all. For example: 1 + 0 + 0 + 2 + 1 + 2 + 3 + 7 + 3 so the final result will be 19. Don't print the number, return it instead.\n\nInput: ``` findHeaterPower(100212373) ```\n\nExpected output: ``` 19 ```\n\nPseudocode example: ``` defn findHeaterPower(input)\n  result = sum(digits of input)\n  return result\nend ```\n\nConstraints:\n  - The input will never exceeds 2147483647\n  - The input will never be negative\n\n\nThat's it. Good luck and have fun!",
      "languages": [
        {
          "name": "python",
          "code": "def findHeaterPower(input: int) -> int:\n  |\n"
        },
        {
          "name": "java",
          "code": "class Heater {\n  public int findHeaterPower(int input) {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function findHeaterPower(input) {\n    |\n}\n"
        },
        {
          "name": "php",
          "code": "function findHeaterPower(int input): int {\n    |\n}\n"
        },
        {
          "name": "c++",
          "code": "int findHeaterPower(int input) {\n    |\n}\n"
        },
        {
          "name": "c",
          "code": "int findHeaterPower(int input) {\n    |\n}\n"
        }
      ]
    },
    {
      "id": 5,
      "title": "Diamond Shape",
      "question": "Great, if you're here then you must've found the power needed to turn on the heater, but here's the problem. You don't think it's warm enough. You decided to go to your favourite search engine to find how to make it warmer and found an article telling you to place a diamond on top of the heater to make it warmer. You decided to find a diamond in your house but you couldn't find it, so you decided to make one.\n\nIn order to make a diamond using code, create a function that receives an odd integer which will defines the diamond's height and then print the diamond shape. Here's an example:\n\nInput: ``` makeDiamond(7) ```\n\nExpected output: ```\n   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n```\nConstraints:\n  - The height will always be odd\n  - The height will never exceeds 100\n  - The height will never be negative",
      "languages": [
        {
          "name": "python",
          "code": "def makeDiamond(height: int) -> None:\n  |\n"
        },
        {
          "name": "java",
          "code": "class Diamond {\n  public void makeDiamond(int height) {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function makeDiamond(height) {\n    |\n}\n"
        },
        {
          "name": "php",
          "code": "function makeDiamond(int height) {\n    |\n}\n"
        },
        {
          "name": "c++",
          "code": "void makeDiamond(int height) {\n    |\n}\n"
        },
        {
          "name": "c",
          "code": "void makeDiamond(int height) {\n    |\n}\n"
        }
      ]
    },
    {
      "id": 6,
      "title": "Pyramid of Numbers",
      "question": "Phew, you did a great job on making the diamond. You placed it on top of the heater and you think it would work, but apparently it made a strange noise and the temperature doesn't get warmer. You back off a little because you're scared. A few seconds later there's a portal appeared on top of the heater. The portal sucked you in.\n\nYou fainted after got sucked in and finally woke up. You don't know where you are. The only thing you know is you're in a dark room and there's a computer in the center of the room. You think there's a note on the screen so you quickly ran to the computer and read the note. Here's what it says:\n\n``` Greetings, mortal human. If you're reading this then you're probably frustrated. How did you got here in the first place? Where is this place? Who am I? Those question are irrelevant. The real question is, do you want to be one of the chosen ones? You're just one step away from being one of them.\n\nIf you can make a pyramid of numbers, I will help you get out. If you can't, well, say good bye to the this world then.\n\nHurry up, time is always ticking.\n\nPS: uhh, if you don't know yet, which you should've known by now, the time limit is on the top left of the screen ```\nYou feel confused and scared so you try to do what the note wants you to do. Make a pyramid of numbers. Here's an example:\n\nInput: ``` makePyramid(7) ```\n\nExpected output: ```\n      1\n     2 2\n    3 3 3\n   4 4 4 4\n  5 5 5 5 5\n 6 6 6 6 6 6\n7 7 7 7 7 7 7 ```\nConstraints:\n  - The height will always be odd\n  - The height will never exceeds 100\n  - The height will never be negative",
      "languages": [
        {
          "name": "python",
          "code": "def makePyramid(height: int) -> None:\n  |\n"
        },
        {
          "name": "java",
          "code": "class Pyramid {\n  public void makePyramid(int height) {\n    |\n  }\n}\n"
        },
        {
          "name": "javascript",
          "code": "function makePyramid(height) {\n    |\n}\n"
        },
        {
          "name": "php",
          "code": "function makePyramid(int height) {\n    |\n}\n"
        },
        {
          "name": "c++",
          "code": "void makePyramid(int height) {\n    |\n}\n"
        },
        {
          "name": "c",
          "code": "void makePyramid(int height) {\n    |\n}\n"
        }
      ]
    }
  ]
}
