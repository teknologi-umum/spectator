services:
  # caddy:
  #   image: caddy:2.4.6-alpine
  #   restart: always
  #   volumes:
  #     - ./data/caddy/Caddyfile:/etc/caddy/Caddyfile
  #   depends_on:
  #     - backend
  #     - frontend
  #   networks:
  #     - default
  #     - host_pub

  backend:
    build:
      context: .
      dockerfile: ./backend/Spectator/Dockerfile
    restart: on-failure:5
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_InfluxDbOptions__Url=http://influx:8086
      - ASPNETCORE_InfluxDbOptions__Token=${INFLUXDB_TOKEN}
      - ASPNETCORE_InfluxDbOptions__SessionEventsBucket=session_events
      - ASPNETCORE_InfluxDbOptions__InputEventsBucket=input_events
      - ASPNETCORE_InfluxDbOptions__Org=${INFLUXDB_ORG}
      - ASPNETCORE_LoggerOptions__AccessToken=${LOGGER_TOKEN}
      - ASPNETCORE_LoggerOptions__Address=http://logger:3000
      - ASPNETCORE_JwtAuthentication__Secret=q6r+MfCs2qAjFe6z2vfrIXtDrTc7uNwPzZwE1RNFFM2IQ6n84zOMUFbwmPtguZwAP5kgCZ803iJgmXkbRzGCbQ==
      - ASPNETCORE_JwtAuthentication__Issuer=https://teknologiumum.com
      - ASPNETCORE_JwtAuthentication__Audience=https://teknologiumum.com
      - ASPNETCORE_JwtAuthentication__Lifetime=31536000
      - ASPNETCORE_MinioOptions__Url=minio:9000
      - ASPNETCORE_MinioOptions__AccessKey=${MINIO_ACCESS_KEY}
      - ASPNETCORE_MinioOptions__SecretKey=${MINIO_SECRET_KEY}
      - ASPNETCORE_PistonOptions__Address=http://rce:50051
      - ASPNETCORE_PistonOptions__MaxConcurrentExecution=2
      - ASPNETCORE_PistonOptions__CompileTimeout=5000
      - ASPNETCORE_PistonOptions__RunTimeout=10000
      - ASPNETCORE_PistonOptions__MemoryLimit=2000000000
      - ASPNETCORE_WorkerOptions__Address=http://worker:3000
      - ASPNETCORE_VideoOptions__Address=http://video:3000
      - VITE_SESSION_HUB_URL=${VITE_SESSION_HUB_URL}
      - VITE_EVENT_HUB_URL=${VITE_EVENT_HUB_URL}
      - VITE_LOGGER_URL=${VITE_LOGGER_URL}
      - VITE_VIDEO_STREAM_URL=${VITE_VIDEO_STREAM_URL}
      - VITE_ADMIN_URL=${VITE_ADMIN_URL}
      - VITE_MINIO_URL=${VITE_MINIO_URL}
    ports:
      - 5000:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      worker:
        condition: service_started
      logger:
        condition: service_started
      influx:
        condition: service_healthy
      minio:
        condition: service_healthy

  minio:
    image: quay.io/minio/minio:RELEASE.2021-12-10T23-03-39Z
    command: server /data --console-address ":9001"
    restart: on-failure:10
    ports:
      - 7777:9000
    hostname: minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
    healthcheck:
      test: "curl -f http://localhost:9000/minio/health/live"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./data/minio:/data

  influx:
    image: influxdb:2.3.0
    hostname: influx
    restart: on-failure:10
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USERNAME}
      DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
      DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
      DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}
    healthcheck:
      test: "influx ping"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./data/influx/data2:/var/lib/influxdb2
      - ./data/influx/data1:/var/lib/influxdb
      - ./data/influx/etc:/etc/influxdb2

  rce:
    build: ./rce/
    restart: on-failure:5
    hostname: rce
    environment:
      ENVIRONMENT: production
      PORT: 50051
      LOGGER_TOKEN: ${LOGGER_TOKEN}
      LOGGER_SERVER_ADDRESS: logger:3000
    depends_on:
      logger:
        condition: service_started

  worker:
    build: ./worker/
    restart: on-failure:5
    environment:
      ENVIRONMENT: production
      PORT: 3000
      INFLUX_TOKEN: ${INFLUXDB_TOKEN}
      INFLUX_HOST: http://influx:8086
      INFLUX_ORG: ${INFLUXDB_ORG}
      MINIO_HOST: minio:9000
      MINIO_ACCESS_ID: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_TOKEN: ''
      LOGGER_SERVER_ADDRESS: logger:3000
      LOGGER_TOKEN: ${LOGGER_TOKEN}
    depends_on:
      logger:
        condition: service_started
      influx:
        condition: service_healthy
      minio:
        condition: service_healthy

  video:
    build: ./video/
    restart: on-failure:5
    environment:
      ENVIRONMENT: production
      PORT: 3000
      INFLUX_TOKEN: ${INFLUXDB_TOKEN}
      INFLUX_HOST: http://influx:8086
      INFLUX_ORG: ${INFLUXDB_ORG}
      MINIO_HOST: minio:9000
      MINIO_ACCESS_ID: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_TOKEN: ''
      LOGGER_SERVER_ADDRESS: logger:3000
      LOGGER_TOKEN: ${LOGGER_TOKEN}
    depends_on:
      logger:
        condition: service_started
      influx:
        condition: service_healthy
      minio:
        condition: service_healthy

  logger:
    build: ./logger/
    restart: on-failure:5
    environment:
      ENVIRONMENT: production
      PORT: 3000
      INFLUX_TOKEN: ${INFLUXDB_TOKEN}
      INFLUX_URL: http://influx:8086
      INFLUX_ORG: ${INFLUXDB_ORG}
      ACCESS_TOKEN: ${LOGGER_TOKEN}
    depends_on:
      influx:
        condition: service_healthy

networks:
  host_pub:
    driver: "bridge"
