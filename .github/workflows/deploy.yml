name: Deploy

on:
  push:
    branches: ["master"]

jobs:
  # backend:
  #   name: Backend check
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   services:
  #     db:
  #       image: influxdb:2.1
  #       env:
  #         DOCKER_INFLUXDB_INIT_USERNAME: teknum
  #         DOCKER_INFLUXDB_INIT_PASSWORD: P@ssw0rd!
  #         DOCKER_INFLUXDB_INIT_ORG: teknologi
  #         DOCKER_INFLUXDB_INIT_BUCKET: spectator
  #       ports:
  #         - 8086:8086
  #   defaults:
  #     run:
  #       working-directory: ./backend
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Setup .NET
  #       uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: 6.0.100
  #     - name: Restore dependencies
  #       run: dotnet restore
  #     - name: Build
  #       run: dotnet build --no-restore
  #     - name: Test
  #       run: dotnet test --no-build --verbosity normal
  frontend:
    name: Frontend check
    runs-on: ubuntu-latest
    container: node:16-buster
    timeout-minutes: 10
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      - name: Lint
        run: npm run lint:check
      - name: Build
        run: npm run build
  configs:
    name: Verify config
    runs-on: ubuntu-latest
    container: python:3-buster
    timeout-minutes: 10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install docker-compose
        run: >
          curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          && chmod +x /usr/local/bin/docker-compose
          && docker-compose --version
      - name: Install ansible-lint
        run: >
          pip install ansible
          && pip3 install "ansible-lint[core,yamllint]"
          && ansible-lint --version
      - name: Lint docker-compose
        run: docker-compose config
      - name: Lint ansible
        run: ansible-lint -v -f rich ansible.yml
  deploy:
    name: Deploy
    needs: [configs, frontend]
    runs-on: ubuntu-latest
    container: python:3-buster
    timeout-minutes: 15
    steps:
      - name: Add SSH key
        run: echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_ed25519
      - name: Add SSH IP address
        run: echo "${{ secrets.SSH_IP }}" > inventory
      - name: Install ansible
        run: >
          pip install ansible
          && ansible-playbook --version
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Run ansible
        run: >
          ansible-playbook
            -v
            --inventory inventory
            --private-key ~/.ssh/id_ed25519
            --user ${{ secrets.SSH_USERNAME }}
            ansible.yml
        env:
          SSH_IP: ${{ secrets.SSH_IP }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}
          GITHUB_SHA: ${{ env.GITHUB_SHA }}
          GITHUB_REF: ${{ env.GITHUB_REF }}
