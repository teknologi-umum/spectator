services:
  # caddy:
  #   image: caddy:2.5.1-alpine
  #   restart: always
  #   volumes:
  #     - ./data/caddy/Caddyfile:/etc/caddy/Caddyfile
  #   depends_on:
  #     - backend
  #     #- frontend
  #   networks:
  #     - default
  #     - host_pub

  backend:
    build:
      context: .
      dockerfile: ./backend/Spectator/Dockerfile
    restart: on-failure:5
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_InfluxDbOptions__Url=http://influx:8086
      - ASPNETCORE_InfluxDbOptions__Token=nMfrRYVcTyqFwDARAdqB92Ywj6GNMgPEd
      - ASPNETCORE_InfluxDbOptions__SessionEventsBucket=session_events
      - ASPNETCORE_InfluxDbOptions__InputEventsBucket=input_events
      - ASPNETCORE_InfluxDbOptions__Org=teknum_spectator
      - ASPNETCORE_JwtAuthentication__Secret=WjwYAUMbH0mZfLBmOmELCg==
    ports:
      - 5000:80
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/root/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/root/.aspnet/https:ro
    depends_on:
      worker:
        condition: service_started
      logger:
        condition: service_started
      influx:
        condition: service_healthy
      minio:
        condition: service_healthy

  minio:
    image: quay.io/minio/minio:RELEASE.2021-12-10T23-03-39Z
    command: server /data --console-address ":9001"
    restart: on-failure:10
    ports:
      - 7777:9000
    hostname: minio
    environment:
      MINIO_ROOT_USER: teknum
      MINIO_ROOT_PASSWORD: c2N9Xz8bzHPkgNcgDtKgwGPTdb76GjD48
      MINIO_SECRET_KEY: xLxBHSp2vAdX2TJSy6EptamrNk5ZXzXo
      MINIO_ACCESS_KEY: diPj59zJzm2kwUZxcg5QRAUtpbVx5Uxd
    healthcheck:
      test: "curl -f http://localhost:9000/minio/health/live"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./data/minio:/data

  influx:
    image: influxdb:2.1.1-alpine
    hostname: influx
    restart: on-failure:10
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: teknum
      DOCKER_INFLUXDB_INIT_PASSWORD: ESHVeXGynXR73942AmAkCNseenwcQVqKu
      DOCKER_INFLUXDB_INIT_ORG: teknum_spectator
      DOCKER_INFLUXDB_INIT_BUCKET: teknum_bucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: nMfrRYVcTyqFwDARAdqB92Ywj6GNMgPEd
    healthcheck:
      test: "curl -f http://localhost:8086/ping"
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./data/influx:/var/lib/influxdb

  rce:
    image: ./rce/
    restart: on-failure:5
    hostname: rce
    environment:
      ENVIRONMENT: production
      PORT: 50051
      LOGGER_TOKEN: PHyavsmpWQz8Q4jgcFH2S24dwJoVkASG
      LOGGER_SERVER_ADDRESS: logger:3000
    depends_on:
      logger:
        condition: service_started

  worker:
    build: ./worker/
    restart: on-failure:5
    environment:
      ENVIRONMENT: production
      PORT: 3000
      INFLUX_TOKEN: nMfrRYVcTyqFwDARAdqB92Ywj6GNMgPEd
      INFLUX_HOST: http://influx:8086
      INFLUX_ORG: teknum_spectator
      MINIO_HOST: minio:9000
      MINIO_ACCESS_ID: teknum
      MINIO_SECRET_KEY: c2N9Xz8bzHPkgNcgDtKgwGPTdb76GjD48
      MINIO_TOKEN: ''
      LOGGER_SERVER_ADDRESS: logger:3000
      LOGGER_TOKEN: PHyavsmpWQz8Q4jgcFH2S24dwJoVkASG
    depends_on:
      logger:
        condition: service_started
      influx:
        condition: service_healthy
      minio:
        condition: service_healthy

  logger:
    build: ./logger/
    restart: on-failure:5
    environment:
      ENVIRONMENT: development
      PORT: 3000
      INFLUX_TOKEN: nMfrRYVcTyqFwDARAdqB92Ywj6GNMgPEd
      INFLUX_URL: http://influx:8086
      INFLUX_ORG: teknum_spectator
      ACCESS_TOKEN: PHyavsmpWQz8Q4jgcFH2S24dwJoVkASG
    depends_on:
      influx:
        condition: service_healthy
